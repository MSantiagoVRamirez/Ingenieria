// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seguridad.Models;

#nullable disable

namespace Seguridad.Migrations
{
    [DbContext(typeof(IngenieriaContext))]
    partial class IngenieriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Seguridad.Models.Contratos.ActaContrato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("contratoId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("contratoId");

                    b.ToTable("ActaContrato");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.ActaODS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("odsId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("odsId");

                    b.ToTable("ActaODS");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.AmpliacionContrato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("contratoId")
                        .HasColumnType("int");

                    b.Property<int>("duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("contratoId");

                    b.ToTable("AmpliacionContrato");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.Contrato", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("duracion")
                        .HasColumnType("int");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("objeto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("usuarioAsignaId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioContratistaId")
                        .HasColumnType("int");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.HasIndex("usuarioAsignaId");

                    b.HasIndex("usuarioContratistaId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.ODS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ampliacionContratoId")
                        .HasColumnType("int");

                    b.Property<string>("conexoObra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("contratoId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("duracion")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaFinSuspension")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaInicioSuspension")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("plantaSistema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("proyectoId")
                        .HasColumnType("int");

                    b.Property<int>("recurso")
                        .HasColumnType("int");

                    b.Property<int>("solicitanteId")
                        .HasColumnType("int");

                    b.Property<int>("supervisorId")
                        .HasColumnType("int");

                    b.Property<int>("troncalId")
                        .HasColumnType("int");

                    b.Property<decimal>("valorActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorInical")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("ampliacionContratoId");

                    b.HasIndex("contratoId");

                    b.HasIndex("proyectoId");

                    b.HasIndex("solicitanteId");

                    b.HasIndex("supervisorId");

                    b.HasIndex("troncalId");

                    b.ToTable("ODS");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.OrdenCambio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("duracion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("odsId")
                        .HasColumnType("int");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("odsId");

                    b.ToTable("OrdenCambio");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Modulo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Permiso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("consultar")
                        .HasColumnType("bit");

                    b.Property<bool>("editar")
                        .HasColumnType("bit");

                    b.Property<bool>("eliminar")
                        .HasColumnType("bit");

                    b.Property<bool>("exportar")
                        .HasColumnType("bit");

                    b.Property<bool>("importar")
                        .HasColumnType("bit");

                    b.Property<bool>("insertar")
                        .HasColumnType("bit");

                    b.Property<bool>("lectura")
                        .HasColumnType("bit");

                    b.Property<int>("moduloId")
                        .HasColumnType("int");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("moduloId");

                    b.HasIndex("rolId");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Proyecto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("liderId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("liderId");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Troncal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Troncal");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("confirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empresaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("empresaId");

                    b.HasIndex("rolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.ActaContrato", b =>
                {
                    b.HasOne("Seguridad.Models.Contratos.Contrato", "actaContratoFk")
                        .WithMany()
                        .HasForeignKey("contratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("actaContratoFk");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.ActaODS", b =>
                {
                    b.HasOne("Seguridad.Models.Contratos.ODS", "actaOdsFk")
                        .WithMany()
                        .HasForeignKey("odsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actaOdsFk");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.AmpliacionContrato", b =>
                {
                    b.HasOne("Seguridad.Models.Contratos.Contrato", "contratoAmpliacionFk")
                        .WithMany()
                        .HasForeignKey("contratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("contratoAmpliacionFk");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.Contrato", b =>
                {
                    b.HasOne("Seguridad.Models.Seguridad.Empresa", "empresaContratoFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Usuario", "usuarioAsignaConFk")
                        .WithMany()
                        .HasForeignKey("usuarioAsignaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Usuario", "usuarioContratistaFk")
                        .WithMany()
                        .HasForeignKey("usuarioContratistaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("empresaContratoFk");

                    b.Navigation("usuarioAsignaConFk");

                    b.Navigation("usuarioContratistaFk");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.ODS", b =>
                {
                    b.HasOne("Seguridad.Models.Contratos.AmpliacionContrato", "ampliacionConODSFk")
                        .WithMany()
                        .HasForeignKey("ampliacionContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Contratos.Contrato", "contratoODSFk")
                        .WithMany()
                        .HasForeignKey("contratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Proyecto", "proyectoODSFk")
                        .WithMany()
                        .HasForeignKey("proyectoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Usuario", "solicitanteODSFk")
                        .WithMany()
                        .HasForeignKey("solicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Usuario", "supervisorODSFk")
                        .WithMany()
                        .HasForeignKey("supervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Troncal", "troncalODSFk")
                        .WithMany()
                        .HasForeignKey("troncalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ampliacionConODSFk");

                    b.Navigation("contratoODSFk");

                    b.Navigation("proyectoODSFk");

                    b.Navigation("solicitanteODSFk");

                    b.Navigation("supervisorODSFk");

                    b.Navigation("troncalODSFk");
                });

            modelBuilder.Entity("Seguridad.Models.Contratos.OrdenCambio", b =>
                {
                    b.HasOne("Seguridad.Models.Contratos.ODS", "odsOrdenCamFk")
                        .WithMany()
                        .HasForeignKey("odsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("odsOrdenCamFk");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Permiso", b =>
                {
                    b.HasOne("Seguridad.Models.Seguridad.Modulo", "moduloPermisoFk")
                        .WithMany()
                        .HasForeignKey("moduloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Rol", "rolPermisoFk")
                        .WithMany()
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("moduloPermisoFk");

                    b.Navigation("rolPermisoFk");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Proyecto", b =>
                {
                    b.HasOne("Seguridad.Models.Seguridad.Usuario", "liderProyectoFk")
                        .WithMany()
                        .HasForeignKey("liderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("liderProyectoFk");
                });

            modelBuilder.Entity("Seguridad.Models.Seguridad.Usuario", b =>
                {
                    b.HasOne("Seguridad.Models.Seguridad.Empresa", "empresaUsuarioFk")
                        .WithMany()
                        .HasForeignKey("empresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seguridad.Models.Seguridad.Rol", "rolUsuarioFk")
                        .WithMany()
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("empresaUsuarioFk");

                    b.Navigation("rolUsuarioFk");
                });
#pragma warning restore 612, 618
        }
    }
}
